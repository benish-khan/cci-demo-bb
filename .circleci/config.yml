version: 2.1 # use 2.1 to make use of orbs and pipelines

#### Orbs  ###
orbs:
  python: circleci/python@1.3.3
  slack: circleci/slack@2.0.0 
  heroku: circleci/heroku@1.2.6 #Example of my deployment orb to Heroku
  sauce-connect: saucelabs/sauce-connect@1.0.1 #Example of partner orb


### Executors ### 
executors:
  python-executor:
    docker:
      - image: cimg/python:3.9.2

  python-browser-tools:
    docker:
      - image: cimg/python:3.9.2-browsers
  


### Workflows ###
workflows:
  version: 2.1
  build-test-&-deploy:
    jobs:
      - build
      - test_crud_operations:
          requires:
            - build 
      # - sauce-connect/with_proxy: # https://circleci.com/developer/orbs/orb/circleci/browser-tools
      #   $SAUCELABS_USER
      #   $SAUCELABS_KEY
      #   name: "Chrome Tests"
      #   requires:
      #     - build
      #     - test_crud_operations
      #   tunnel_identifier: chrome
      #   steps:
      #     - run: mvn verify -B -Dsauce.browser=chrome  -Dsauce.tunnel="chrome"
      # - sauce-connect/with_proxy:
      #   $SAUCELABS_USER
      #   $SAUCELABS_KEY
      #   name: "Safari Tests"
      #   requires:
      #     - build
      #     - test_crud_operations
      #   tunnel_identifier: safari
      #   steps:
      #     - run: mvn verify -B -Dsauce.browser=safari  -Dsauce.tunnel="safari"
          

      - hold:
          type: approval
          requires:
            - build
            - test_crud_operations
            # - "Chrome Tests"
            # - "Safari Tests"
      - deploy-to-heroku: #the app will deploy changed made only when pushed from testingdb branch
          requires:
            - hold
          filters:
            branches:
              only:
                - master


 ### Jobs ###
jobs:
  
  build: #job with steps to build my application
    executor: python-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v1-{{ .Branch }}-
            - pip-packages-v1-
      - run: 
          name: Install Python venv 
          command: | 
            pipenv install
      - run:
          name: Check Python version
          command: | 
            pipenv run python --version
      - run:
          name: Print relative path 
          command: pwd

      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ./venv
      # - persist_to_workspace:
      #     root: ~/project
      #     paths:
      #       - my-temp-workspace




  test_crud_operations: #job with steps to test my application
    executor: python-browser-tools   #this was pre-defined and called here
    parallelism: 4
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run: 
          name: Install Python Dependencies in a venv 
          command: | 
            pipenv install 
      
      - run: 
          name: Create test-results file to store test-results in
          command: |
              cd /home/circleci/project
              mkdir test-results
      - run:
          name: Running tests within test_app.py file. 
          command: pipenv run python test_app.py  

      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: trl

      - run:
          name: Run Tests
          command: echo "Its working"




  deploy-to-heroku: #job with steps to deploy my application once build and tests jobs pass on master only.
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Setup Heroku CLI 
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Restart heroku dyno
          command: |
            heroku restart web.1 --app $HEROKU_APP_NAME

      - run:
          name: Run Logs
          command: |
            heroku logs --app $HEROKU_APP_NAME