version: 2.1 # use 2.1 to make use of orbs and pipelines

#### Orbs  ###
orbs:
  python: circleci/python@1.3.3
  slack: circleci/slack@2.0.0

### Workflows ###
workflows:
  version: 2.1
  build-test-&-deploy: 
    jobs:
      - build-python-app
      - test-python-app
      # - setup-heroku-environment:
      #     filters:
      #       branches:
      #         only:
      #           - master


 ### Jobs ###
jobs:
  
  build-python-app: #job with steps to build my application
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pip
      - run:
          command: | 
            pipenv run pytest --version
          name: Test it now


      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v1-{{ .Branch }}-
            - pip-packages-v1-
      - save_cache:
          paths:
            - ~/.local/share/virtualenvs/venv  # this path depends on where pipenv creates a virtualenv
          key: pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}


  test-python-app: #job with steps to test my application
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: Run tests
          command: pytest 


# setup-heroku-environment: #job with steps to deploy my application once build and tests jobs pass on master only.
#     working_directory: ~/project
#     machine: true
#     steps:
#        - checkout
#        - run:
#            name: Provision Heroku Dyno
#            command: chmod +x scripts/provision_heroku.sh && scripts/provision_heroku.sh




