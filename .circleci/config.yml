version: 2.1 # use 2.1 to make use of orbs and pipelines
# setup: true
#### Orbs  ###
orbs:
  heroku: circleci/heroku@1.2.6 #quickly deploy applications with minimal config
  #path-filtering: circleci/path-filtering@0.0.2
  #continuation: circleci/continuation@0.1.2



### Executors ###
executors: #can reuse this executor in other job
  python-executor:
    docker:
      - image: cimg/python:3.8



### Workflows ###
workflows:
  version: 2.1
  my-workflow:
    jobs:
      - build
      - test:
          requires:
            - build 


 ### Jobs here ### 
jobs:
  
  build: 
    executor: python-executor 
    steps:
      - checkout
      - restore_cache: # downloads new dependencies, if any, and not redownload everything on every build
          keys:
            - pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v1-{{ .Branch }}-
            - pip-packages-v1-
      - run: 
          name: Install Python venv 
          command: | 
            pipenv install 
      - run:
          name: Check Python version
          command: | 
            pipenv run python --version

      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key 
          key: pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ./venv

#Caching persists data between the same job in different workflow runs.

  test: 
    executor: python-executor   #this was pre-defined and called here
    parallelism: 4
    resource_class: medium
    steps:
      - checkout
      - attach_workspace: #persist data between jobs in a single workflow
          at: ~/project
      - run: 
          name: Install Python Dependencies in a venv 
          command: | 
            pipenv install 
            pipenv install unittest-xml-reporting
      



